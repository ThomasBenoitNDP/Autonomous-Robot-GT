#! /usr/bin/env python
# Task Long configuration

PACKAGE='floor_nav'
import roslib; roslib.load_manifest(PACKAGE)
import math 

from dynamic_reconfigure.parameter_generator import *
from task_manager_lib.parameter_generator import *

gen = TaskParameterGenerator()
#       Name                    Type            Description
#       Default    Min   Max
gen.add("goal_x",        double_t, 0,    "X coordinate of destination",  0.)
gen.add("goal_y",        double_t, 0,    "Y coordinate of destination",  0.)

# add 
gen.add("goal_angle",    double_t, 0,    "Size of angular sensors (in rad)", 30.*math.pi/180., 0.)
gen.add("smart_mode",     bool_t, 0,     "When true, the GoToTask is in smart mode (include alpha desired)",  False)

gen.add("relative",     bool_t, 0,    "When true, the goal is relative to the current position",  False)
gen.add("k_v",           double_t, 0,    "Gain for velocity control",  5.0)

# add 
gen.add("k_v_f",           double_t, 0,    "Gain for velocity control",  0.5)

gen.add("k_alpha",       double_t, 0,    "Gain for angular control",  3.0)
gen.add("max_velocity",  double_t, 0,    "Max allowed velocity",  2.0)
gen.add("max_angular_velocity",  double_t, 0, "Max allowed angular velocity",  1.0)
gen.add("dist_threshold",double_t, 0,    "Distance at which a the target is considered reached",  0.1)

# add
gen.add("angle_error",double_t, 0,    "Angle error at which a the target is considered reached",  5.*math.pi/180.)


exit(gen.generate(PACKAGE, "floor_nav", "TaskGoToPose"))

